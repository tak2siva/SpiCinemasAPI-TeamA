buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.postgresql:postgresql:9.4.1211.jre7'
		classpath 'nu.studer:gradle-jooq-plugin:1.0.5'
		classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.0.3"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'nu.studer.jooq'
apply plugin: "org.flywaydb.flyway"
apply from: "configuration.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.16.20'
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.postgresql:postgresql:9.4.1211.jre7')
	compile('org.flywaydb:flyway-core:4.0.3')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	spicinemas(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = "jdbc:postgresql://${config.db_host}:${config.port}/${config.db_name}"
			user = config.username
			password = config.password
			schema = 'public'
		}
		generator {
			name = 'org.jooq.util.DefaultGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.postgres.PostgresDatabase'
				inputSchema = 'public'
				customTypes {
					customType {
						name = 'com.fasterxml.jackson.databind.JsonNode'
						converter = 'spicinemas.api.config.db.PostgresJSONJacksonJsonNodeBinding'
					}
				}
				forcedTypes {
					forcedType {
						name = 'com.fasterxml.jackson.databind.JsonNode'
						expression = 'public\\.controller\\.address'
					}
				}
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
			}
			target {
				packageName = 'spicinemas.db.gen'
				directory = 'src/main/generated/java'
			}
		}
	}
}

ext {
	local_url = 'jdbc:postgresql://localhost:7654/spicinemas'
}

flyway {
	url = "jdbc:postgresql://${config.db_host}:${config.port}/${config.db_name}"
	user = config.username
	password = config.password
	schemas = ['public']
	locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}



generateSpicinemasJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean